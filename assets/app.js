// Initialize Firebase
var config = {
    apiKey: "AIzaSyAiqedcuwlanvn7xCgrRs0yJyOf4G6ceCE",
    authDomain: "rps-game-81763.firebaseapp.com",
    databaseURL: "https://rps-game-81763.firebaseio.com",
    projectId: "rps-game-81763",
    storageBucket: "",
    messagingSenderId: "817026141804"
};
firebase.initializeApp(config);
//make a database variable
let db = firebase.database();
//declare variables
let userName;
let dataRef;
let userRef;
let lobbyRef;
//grab the firebase connections reference
let userCons = db.ref('.info/connected');
//make a reference for my lobbies folder on the database
let lobbies = db.ref('/lobbies');
userCons.on("value", function(userList){
    if(userList.val()) {
        //see how many lobbies there are or if there's any
        lobbies.once("value").then(function(lobbiesSnap){
            //if no lobbies, make the first lobby
            if(lobbiesSnap.numChildren() === 0) {
                //make a lobby and push to it to create a user
                let con = db.ref('/lobbies/lobby' + Date.now()).push("meatball");
                //assign reference for this lobby
                lobbyRef = db.ref('/lobbies/' + con.path.n[1]);
                //assign reference for this user's data
                userRef = db.ref('/lobbies/' + con.path.n[1] + '/' + con.path.n[2]);
                //assign a username based off key generated by firebase for userdata folder in lobby
                userName = con.path.n[2].slice(14)
                //add default player name
                changeName(userName);
                //assign ref for data for this lobby
                dataRef = db.ref('/lobbyData/dataFor' + con.path.n[1]);
                //remove this user from lobby when disconnect
                con.onDisconnect().remove();
                //clear all lobby data when this user disconnects
                dataRef.onDisconnect().remove();

            } else {
                let lobbied = false;
                lobbiesSnap.forEach(function(lobbyUsers){
                    if (lobbyUsers.numChildren() === 1) {
                        //add to here, then return true to break forEach
                        let con = lobbyUsers.ref.push("mama");
                        con.onDisconnect().remove();
                        userRef = db.ref('/lobbies/' + con.path.n[1] + '/' + con.path.n[2]);
                        userName = con.path.n[2].slice(14)
                        changeName(userName);                        
                        dataRef = db.ref('/lobbyData/dataFor' + con.path.n[1]);
                        dataRef.onDisconnect().remove();
                        lobbied = true;
                        return true;
                    }
                });
                //create new lobby
                if(!lobbied) {
                    let con = db.ref('/lobbies/lobby' + Date.now()).push("conan");
                    con.onDisconnect().remove();
                    lobbyRef = db.ref('/lobbies/' + con.path.n[1]);
                    userRef = db.ref('/lobbies/' + con.path.n[1] + '/' + con.path.n[2]);
                    userName = con.path.n[2].slice(14)
                    changeName(userName);                
                    dataRef = db.ref('/lobbyData/dataFor' + con.path.n[1]);
                    dataRef.onDisconnect().remove();
                }//end if lobbied
            }//end else
        }); //end lobbies.once
    
    }
}); //end userCons call

function changeName(str) {
    userName = str;
    userRef.update({
        name: userName
    });
}

